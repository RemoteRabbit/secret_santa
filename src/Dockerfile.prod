###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.0-alpine as builder

# set work directory
WORKDIR /usr/src

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . /usr/src/
RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.0-alpine

# create directory for the user
RUN mkdir -p /home/base

# create the user
RUN addgroup -S base && adduser -S base -G base

# create the appropriate directories
ENV HOME=/home/base
ENV BASE_HOME=/home/base/web
RUN mkdir $BASE_HOME
RUN mkdir $BASE_HOME/staticfiles
RUN mkdir $BASE_HOME/mediafiles
WORKDIR $BASE_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/wheels /wheels
COPY --from=builder /usr/src/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $BASE_HOME

# copy project
COPY . $BASE_HOME

# chown all the files to the user
RUN chown -R base:base $BASE_HOME

# change to the app user
USER base

# run entrypoint.prod.sh
ENTRYPOINT ["/home/base/web/entrypoint.prod.sh"]
